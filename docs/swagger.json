{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/gallery": {
            "get": {
                "description": "List all galleries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gallery"
                ],
                "summary": "List all galleries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "_start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "_sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order",
                        "name": "_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Gallery"
                            }
                        }
                    }
                }
            }
        },
        "/gallery/mix": {
            "post": {
                "description": "mix 2 gals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gallery"
                ],
                "summary": "Mix two galleries in one",
                "parameters": [
                    {
                        "description": "Source and Destination IDs",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Form"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gallery/{id}": {
            "get": {
                "description": "Get one gallery infos by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gallery"
                ],
                "summary": "Get one Gallery",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gallery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "_start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "_sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order",
                        "name": "_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Gallery"
                        }
                    }
                }
            },
            "put": {
                "description": "Set Model Name and tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gallery"
                ],
                "summary": "Update Gallery infos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gallery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Gallery"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Gallery and photos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gallery"
                ],
                "summary": "Delete Gallery",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gallery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gallery/{id}/update-views": {
            "get": {
                "description": "Set views +1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gallery"
                ],
                "summary": "Update Gallery views",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gallery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/import": {
            "get": {
                "description": "Start import process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "import"
                ],
                "summary": "Import new Gallery",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/photo": {
            "get": {
                "description": "Get photo list from parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "Get photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gallery ID",
                        "name": "gallery_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "_start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "_sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order",
                        "name": "_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Photo"
                            }
                        }
                    }
                }
            }
        },
        "/photo/{id}": {
            "get": {
                "description": "Get one photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "Get photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Photo"
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "description": "Returns the settings stored in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Get Settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Settings"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the settings stored in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Update Settings",
                "parameters": [
                    {
                        "description": "Settings object",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Settings"
                        }
                    }
                }
            }
        },
        "/settings/auth": {
            "post": {
                "description": "Compare provided MD5 encoded password (in plain text, which is then hashed) with the stored settings password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Compare password",
                "parameters": [
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PasswordForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "true if the password matches, false otherwise",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/thumb/{galId}/{imgId}/{hash}/{size}": {
            "get": {
                "description": "Get thumbnail information by its ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "thumb"
                ],
                "summary": "Get thumbnail by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gallery ID",
                        "name": "galId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Image ID",
                        "name": "imgId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Thumb hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Thumb width in pixel",
                        "name": "size",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/upload": {
            "get": {
                "description": "Returns upload endpoint information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upload"
                ],
                "summary": "Get Upload",
                "responses": {
                    "200": {
                        "description": "Upload endpoint OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Handles file upload and saves the file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upload"
                ],
                "summary": "Post Upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File uploaded successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Form": {
            "type": "object",
            "required": [
                "destId",
                "srcId"
            ],
            "properties": {
                "destId": {
                    "type": "integer"
                },
                "srcId": {
                    "type": "integer"
                }
            }
        },
        "main.PasswordForm": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "model.Gallery": {
            "type": "object",
            "properties": {
                "copyRight": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Photo"
                    }
                },
                "nbItems": {
                    "type": "integer"
                },
                "quality": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "sourceName": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "thumb": {
                    "$ref": "#/definitions/model.Photo"
                },
                "thumbId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "model.Photo": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "ext": {
                    "type": "string"
                },
                "full": {
                    "type": "string"
                },
                "galleryId": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "quality": {
                    "type": "integer"
                },
                "rank": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "model.Settings": {
            "type": "object",
            "properties": {
                "appName": {
                    "type": "string"
                },
                "contentScreenCols": {
                    "type": "string"
                },
                "contentScreenSize": {
                    "type": "string"
                },
                "galleryScreenCols": {
                    "type": "string"
                },
                "galleryScreenSize": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}